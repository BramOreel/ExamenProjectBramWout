Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"69444ef7-e217-4129-a0a3-0f7997122e5f\" name=\"Changes\" comment=\"healen\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/RPG/Creature.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/RPG/Creature.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/RPG/Hero.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/RPG/Hero.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/RPG/Monster.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/RPG/Monster.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OxCm5qWox6dHBXc5DGPKeGW1AR\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/bramo/OneDrive/Documenten/Unief jaar 2/semester 2/OGP/ExamenProjectBramWout&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.editor&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"RPG.Main\" />\r\n      <module name=\"ExamenProjectBramWout\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"RPG.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"69444ef7-e217-4129-a0a3-0f7997122e5f\" name=\"Changes\" comment=\"\" />\r\n      <created>1682493008413</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1682493008413</updated>\r\n      <workItem from=\"1682493009655\" duration=\"2000\" />\r\n      <workItem from=\"1682495227075\" duration=\"20387000\" />\r\n      <workItem from=\"1682686382687\" duration=\"7218000\" />\r\n      <workItem from=\"1682783690778\" duration=\"6520000\" />\r\n      <workItem from=\"1682862326382\" duration=\"17601000\" />\r\n      <workItem from=\"1682955414409\" duration=\"13205000\" />\r\n      <workItem from=\"1682981522832\" duration=\"165000\" />\r\n      <workItem from=\"1683019024939\" duration=\"4623000\" />\r\n      <workItem from=\"1683213889039\" duration=\"3524000\" />\r\n      <workItem from=\"1683380268212\" duration=\"10148000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"al de basis setters, getters en checkers gemaakt, bezig met constructor\">\r\n      <created>1682503734612</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682503734612</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"al de basis setters, getters en checkers gemaakt, bezig met constructor\">\r\n      <created>1682503750873</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682503750873</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"anchors en anchortypes toegevoegd\">\r\n      <created>1682515185209</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682515185209</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"anchors en anchortypes toegevoegd\">\r\n      <created>1682515250708</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682515250708</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"constructor afgewerkt\">\r\n      <created>1682516931020</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682516931020</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"constructor afgewerkt\">\r\n      <created>1682517123747</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682517123747</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"constructor afgewerkt\">\r\n      <created>1682530570486</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682530570486</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"setname override klaar\">\r\n      <created>1682602946401</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682602946401</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"begonnen met monster\">\r\n      <created>1682604429034</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682604429034</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Armor protection geïmplementeerd met tijdsafhankelijke slijtage.\">\r\n      <created>1682775466943</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682775466943</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Begonnen aan value\">\r\n      <created>1682778794557</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682778794557</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Value voor wapens geïmplementeerd\">\r\n      <created>1682779894729</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682779894729</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Value volledig geïmplementeerd\">\r\n      <created>1682794403377</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682794403377</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Capacity en Contents van backpack volledig geïmplementeerd\">\r\n      <created>1682882414293</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682882414293</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Het oppakken van een item dat op de grond ligt en het wegsteken ervan in een rugzak geïmplementeerd\">\r\n      <created>1682980932657</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682980932657</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Kleine bug voor monsters gefikst\">\r\n      <created>1682981682620</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682981682620</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"healen\">\r\n      <created>1683468043509</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683468043509</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"healen\">\r\n      <created>1683468193887</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683468193887</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"healen\">\r\n      <created>1683470077335</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683470077335</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"healen\">\r\n      <created>1683636633443</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683636633443</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"21\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"al de basis setters, getters en checkers gemaakt, bezig met constructor\" />\r\n    <MESSAGE value=\"anchors en anchortypes toegevoegd\" />\r\n    <MESSAGE value=\"constructor afgewerkt\" />\r\n    <MESSAGE value=\"Identificatie van Items geïmplementeerd\" />\r\n    <MESSAGE value=\"Gewicht van Equipables en damage van wapens geïmplementeerd\" />\r\n    <MESSAGE value=\"Armor protection geïmplementeerd met tijdsafhankelijke slijtage.\" />\r\n    <MESSAGE value=\"Begonnen aan value\" />\r\n    <MESSAGE value=\"Value voor wapens geïmplementeerd\" />\r\n    <MESSAGE value=\"Value volledig geïmplementeerd\" />\r\n    <MESSAGE value=\"Capacity en Contents van backpack volledig geïmplementeerd\" />\r\n    <MESSAGE value=\"Het oppakken van een item dat op de grond ligt en het wegsteken ervan in een rugzak geïmplementeerd\" />\r\n    <MESSAGE value=\"Kleine bug voor monsters gefikst\" />\r\n    <MESSAGE value=\"healen\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"healen\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.RuntimeException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"19\" />\r\n        </breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/RPG/Main.java</url>\r\n          <line>106</line>\r\n          <option name=\"timeStamp\" value=\"23\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/ExamenProjectBramWout$Main.ic\" NAME=\"Main Coverage Results\" MODIFIED=\"1682784192722\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>RPG.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3402c114dd823ef39a44eda0a6c6e780dc811c3b)
+++ b/.idea/workspace.xml	(date 1683652384791)
@@ -5,9 +5,18 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="69444ef7-e217-4129-a0a3-0f7997122e5f" name="Changes" comment="healen">
+    <list default="true" id="69444ef7-e217-4129-a0a3-0f7997122e5f" name="Changes" comment="Extra functionaliteiten in verband met laten vallen en oppakken van Items geïmplementeerd. Biderectionele relatie tussen equipables en backpacks opgestelt.">
+      <change afterPath="$PROJECT_DIR$/src/RPG/CantFindArmortoSwapException.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/RPG/Purse.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/RPG/Armor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/RPG/Armor.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/RPG/ArmorType.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/RPG/ArmorType.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/RPG/Backpack.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/RPG/Backpack.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/RPG/BeltAnchorException.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/RPG/BeltAnchorException.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/RPG/Creature.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/RPG/Creature.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/RPG/Hero.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/RPG/Hero.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/RPG/Monster.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/RPG/Monster.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/RPG/Weapon.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/RPG/Weapon.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/RPG/Monster.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/RPG/Monster.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -90,7 +99,7 @@
       <workItem from="1682981522832" duration="165000" />
       <workItem from="1683019024939" duration="4623000" />
       <workItem from="1683213889039" duration="3524000" />
-      <workItem from="1683380268212" duration="10148000" />
+      <workItem from="1683380268212" duration="27418000" />
     </task>
     <task id="LOCAL-00001" summary="al de basis setters, getters en checkers gemaakt, bezig met constructor">
       <created>1682503734612</created>
@@ -218,6 +227,15 @@
       <option name="project" value="LOCAL" />
       <updated>1683468193887</updated>
     </task>
+    <option name="localTasksCounter" value="19" />
+    <task id="LOCAL-00017" summary="Extra functionaliteiten in verband met laten vallen en oppakken van Items geïmplementeerd. Biderectionele relatie tussen equipables en backpacks opgestelt.">
+      <created>1683391073171</created>
+      <option name="number" value="00017" />
+      <option name="presentableId" value="LOCAL-00017" />
+      <option name="project" value="LOCAL" />
+      <updated>1683391073171</updated>
+    </task>
+    <option name="localTasksCounter" value="18" />
     <task id="LOCAL-00019" summary="healen">
       <created>1683470077335</created>
       <option name="number" value="00019" />
@@ -262,6 +280,8 @@
     <MESSAGE value="Capacity en Contents van backpack volledig geïmplementeerd" />
     <MESSAGE value="Het oppakken van een item dat op de grond ligt en het wegsteken ervan in een rugzak geïmplementeerd" />
     <MESSAGE value="Kleine bug voor monsters gefikst" />
+    <MESSAGE value="Extra functionaliteiten in verband met laten vallen en oppakken van Items geïmplementeerd. Biderectionele relatie tussen equipables en backpacks opgestelt." />
+    <option name="LAST_COMMIT_MESSAGE" value="Extra functionaliteiten in verband met laten vallen en oppakken van Items geïmplementeerd. Biderectionele relatie tussen equipables en backpacks opgestelt." />
     <MESSAGE value="healen" />
     <option name="LAST_COMMIT_MESSAGE" value="healen" />
   </component>
Index: .idea/libraries/junit_platform_suite.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\r\n  <library name=\"junit.platform.suite\" type=\"repository\">\r\n    <properties maven-id=\"org.junit.platform:junit-platform-suite:RELEASE\" />\r\n    <CLASSES>\r\n      <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-suite/1.9.3/junit-platform-suite-1.9.3.jar!/\" />\r\n      <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-suite-api/1.9.3/junit-platform-suite-api-1.9.3.jar!/\" />\r\n      <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar!/\" />\r\n      <root url=\"jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/\" />\r\n      <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-suite-engine/1.9.3/junit-platform-suite-engine-1.9.3.jar!/\" />\r\n      <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar!/\" />\r\n      <root url=\"jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/\" />\r\n      <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-suite-commons/1.9.3/junit-platform-suite-commons-1.9.3.jar!/\" />\r\n      <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-launcher/1.9.3/junit-platform-launcher-1.9.3.jar!/\" />\r\n    </CLASSES>\r\n    <JAVADOC />\r\n    <SOURCES />\r\n  </library>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/junit_platform_suite.xml b/.idea/libraries/junit_platform_suite.xml
--- a/.idea/libraries/junit_platform_suite.xml	(revision 3402c114dd823ef39a44eda0a6c6e780dc811c3b)
+++ b/.idea/libraries/junit_platform_suite.xml	(date 1684083370074)
@@ -2,15 +2,15 @@
   <library name="junit.platform.suite" type="repository">
     <properties maven-id="org.junit.platform:junit-platform-suite:RELEASE" />
     <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-suite/1.9.3/junit-platform-suite-1.9.3.jar!/" />
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-suite-api/1.9.3/junit-platform-suite-api-1.9.3.jar!/" />
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-suite/1.10.0-M1/junit-platform-suite-1.10.0-M1.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-suite-api/1.10.0-M1/junit-platform-suite-api-1.10.0-M1.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.10.0-M1/junit-platform-commons-1.10.0-M1.jar!/" />
       <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-suite-engine/1.9.3/junit-platform-suite-engine-1.9.3.jar!/" />
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-suite-engine/1.10.0-M1/junit-platform-suite-engine-1.10.0-M1.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.10.0-M1/junit-platform-engine-1.10.0-M1.jar!/" />
       <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-suite-commons/1.9.3/junit-platform-suite-commons-1.9.3.jar!/" />
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-launcher/1.9.3/junit-platform-launcher-1.9.3.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-suite-commons/1.10.0-M1/junit-platform-suite-commons-1.10.0-M1.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-launcher/1.10.0-M1/junit-platform-launcher-1.10.0-M1.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
Index: src/RPG/Hero.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package RPG;\r\nimport java.util.ArrayList;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\nimport be.kuleuven.cs.som.annotate.Model;\r\nimport be.kuleuven.cs.som.annotate.Raw;\r\nimport java.util.Random;\r\nimport java.text.DecimalFormat;\r\n\r\n/**\r\n *\r\n *\r\n *\r\n *\r\n * @invar a hero may only carry up to 2 armors at a time.\r\n *       |canCarryArmor()\r\n * @invar the 'belt' AnchorSlot may only contain equipables of the 'purse' type.\r\n *      |hier nog shit schrijven\r\n */\r\npublic class Hero extends Creature{\r\n\r\n    /**\r\n     * Generates a new Hero with a name, a maximum amount of hitpoints, a given strength stat and a given protetection stat.\r\n     * Also initialises five Anchors of the anchor class\r\n     *\r\n     * @param name\r\n     *        The given name of the new Hero\r\n     * @param maxHitPoints\r\n     *        The given maximum amount of hitpoints the Hero can have\r\n     * @param strength\r\n     *        The given strength the hero has\r\n     * @param protection\r\n     *        The given protection stat the hero has.\r\n     *@effect The maxcapacity is calculated with the given strength and then set as the strength.\r\n     *        |setMaxCapacity(calculateMaxCapacity(strength));\r\n     *@effect The Hero is generated as a creature with a given name, maxHitPoints and the calculated maxCapacity.\r\n     *        | super(name, maxHitPoints, maxCapacity)\r\n     *@effect The protection is set as the protection.\r\n     *        | setProtection(protection)\r\n     *@effect The strength is set as the strength.\r\n     *        | setStrength(strength)\r\n     *@effect five empty anchors are initialised and set as the anchors of this hero. One left hand, One right hand, one back, one chest and one belt.\r\n     *        |initialiseAnchors();\r\n     */\r\n\r\n    public Hero(String name, int maxHitPoints, double strength, int protection) {\r\n        super(name, maxHitPoints, (int) (20*strength));\r\n        setMaxCapacity(calculateMaxCapacity(strength));\r\n        setProtection(protection);\r\n        setStrength(strength);\r\n        initialiseAnchors();\r\n    }\r\n\r\n    /**\r\n     * Generates a new hero with items equiped.\r\n     * @param name\r\n     *        The given name of the new Hero\r\n     * @param maxHitPoints\r\n     *        The given maximum amount of hitpoints the Hero can have\r\n     * @param strength\r\n     *        The given strength the hero has\r\n     * @param protection\r\n     *        The given protection stat the hero has.\r\n     * @param items\r\n     *        The given items that the Hero has to equip.\r\n     * @effect The Hero gets generated with the given name, maxhipoints, strength and protection.\r\n     *        | this(name, maxHitPoints, strength, protection)\r\n     * @effect All the given items get equiped in the free anchor slots, if there is no empty\r\n     *         compatible anchor left the item does not get equiped.\r\n     *         |for(Equipable item : items)\r\n     *         |   for(Anchor anchor : getAnchors())\r\n     *         |       if(item.isValidAnchor(anchor) && anchor.getItem() == null)\r\n     *         |           item.equip(item)\r\n     */\r\n    public Hero(String name, int maxHitPoints, double strength, int protection, Equipable... items) throws CarryLimitReachedException,ItemAlreadyobtainedException,AnchorslotOquipiedException {\r\n        this(name, maxHitPoints, strength, protection);\r\n        for(Equipable item : items){\r\n            for(Anchor anchor : getAnchors()){\r\n                if(item.isValidAnchor(anchor) && anchor.getItem() == null){\r\n                    try {\r\n                        pickUp(item, anchor.getAnchorType());\r\n                    } catch (ItemAlreadyobtainedException e) {\r\n                        throw new RuntimeException(e);\r\n                    } catch (AnchorslotOquipiedException e) {\r\n                        throw new RuntimeException(e);\r\n                    } catch (CarryLimitReachedException e) {\r\n                        throw new RuntimeException(e);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generates a new Hero with a name, a maximum amount of hitpoints, a given strength stat and the default protetection stat.\r\n     * @param name\r\n     *        The given name of the new Hero\r\n     * @param maxHitPoints\r\n     *        The given maximum amount of hitpoints the Hero can have\r\n     * @param strength\r\n     *        The given strength the hero has\r\n     *@effect The hero is generated as a hero with the default protection stat.\r\n     *        | this(name,maxHitPoints,strength,getDefaultProtection())\r\n     */\r\n    public Hero(String name, int maxHitPoints, double strength){\r\n        this(name,maxHitPoints,strength,getDefaultProtection());\r\n    }\r\n\r\n\r\n    /**\r\n     * variable stating how much protection the hero has, how easily he can dodge or deflect attacks.\r\n     */\r\n    protected int protection;\r\n    /**\r\n     * the default amount of protection for a hero\r\n     */\r\n    protected static final int defaultProtection = 10;\r\n    /**\r\n     * this static states how many decimal places a strenth variable can have.\r\n     */\r\n    private static final int decimalPlacesStrength = 2;\r\n    /**\r\n     * A variable stating the intrinsic strength of a Hero.\r\n     */\r\n    protected double Strength;\r\n\r\n    /**\r\n     * @return the intrinsic protection of the hero\r\n     */\r\n    public int getProtection() {\r\n        return protection;\r\n    }\r\n\r\n    /**\r\n     * @return the default protection of heroes\r\n     */\r\n    public static int getDefaultProtection() {\r\n        return defaultProtection;\r\n    }\r\n\r\n    /**\r\n     * @return the strenth of the hero\r\n     */\r\n    public double getStrength() {\r\n        return Strength;\r\n    }\r\n\r\n    /**\r\n     * Set the protection to a given number\r\n     * @param protection\r\n     *        the given protection\r\n     * @post  If the given protection is a strictly positive number, then it will be set as the protection.\r\n     *        If it is not, then the protection will be set to the default amount.\r\n     *        | if(protection > 0):\r\n     *        |     this.protection = protection\r\n     *        | else:\r\n     *        |     this.protection = getDefaultProtection()\r\n     */\r\n    public void setProtection(int protection) {\r\n        if(protection > 0){\r\n            this.protection = protection;\r\n        }\r\n        else{\r\n            this.protection = getDefaultProtection();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set a new strength and rounds it to the right amount of decimals.\r\n     * @param strength\r\n     *        the given strength\r\n     * @post  The strength of the hero is set to the given number rounded off to the amount of decimal\r\n     *        places given by decimalPlacesStrength.\r\n     *        |this.Strength == Math.round(strength * Math.pow(10, decimalPlacesStrength)) / Math.pow(10, decimalPlacesStrength)\r\n     */\r\n    public void setStrength(double strength) {\r\n        Strength = Math.round(strength * Math.pow(10, decimalPlacesStrength)) / Math.pow(10, decimalPlacesStrength);\r\n    }\r\n    /**\r\n     * Calculates the maximum capacity with the given strength.\r\n     * @param strength\r\n     *        the strength of the character.\r\n     * @return The maximum capacity of the hero based on the rules,\r\n     *         the maximum capacity is 20 times the strength, rounded off an integer.\r\n     *         | maxcapacity == Math.round(strength * 20)\r\n     *\r\n     */\r\n    public int calculateMaxCapacity(double strength){\r\n        return (int) Math.round(strength * 20);\r\n    }\r\n    /**\r\n     * Checks if a given name is valid.\r\n     * @param name\r\n     *        the given name that gets checked.\r\n     * @return True if all the characters in the given name are valid characters, the name is not null\r\n     *          ,the first character is a capital letter, it does not include more than two apostrophes and\r\n     *          every colon is followed by a whitespace.\r\n     *        | name.matches(validCharacters) && name != null && name.matches(\"^[A-Z].*\") && apostrophecount < 3  && allColonsFollowedBySpace\r\n     */\r\n    @Raw\r\n    @Override\r\n    public boolean isValidName(String name){\r\n        int apostrophecount = 0;\r\n        for (int i = 0; i < name.length(); i++) {\r\n            if (name.charAt(i) == '\\'') {\r\n                apostrophecount++;\r\n            }\r\n        }\r\n        Pattern pattern = Pattern.compile(\":\\\\S\");\r\n        Matcher matcher = pattern.matcher(name);\r\n        boolean allColonsFollowedBySpace = !matcher.find() && !(name.charAt(name.length() - 1) == ':');\r\n        return (name.matches(validCharacters) && name != null && name.matches(\"^[A-Z].*\") && apostrophecount < 3  && allColonsFollowedBySpace);\r\n    }\r\n\r\n    /**\r\n     * Anchors\r\n     */\r\n    private void initialiseAnchors(){\r\n        ArrayList<Anchor> list = new ArrayList<Anchor>();\r\n        list.add(new Anchor(AnchorType.LINKERHAND,this));\r\n        list.add(new Anchor(AnchorType.RECHTERHAND,this));\r\n        list.add(new Anchor(AnchorType.RUG,this));\r\n        list.add(new Anchor(AnchorType.LICHAAM,this));\r\n        list.add(new Anchor(AnchorType.RIEM,this));\r\n        setAnchors(list);\r\n    }\r\n\r\n    /**\r\n     * Returns the damage that the hero will do if it hits.\r\n     * @return The intrinsic strength + the damage values of both weapons minus ten and then this number divided in half\r\n     *         and rounded down.\r\n     *         |return Math.floor((getStrength() + leftWeapon.getDamage(). + RightWeapon.getDamage - 10)/2)\r\n     */\r\n    @Override\r\n    protected int getTotalDamage(){\r\n        double damage = getStrength();\r\n        for(Anchor anchor : getAnchors()){\r\n            if(anchor.getAnchorType() == AnchorType.LINKERHAND || anchor.getAnchorType() == AnchorType.RECHTERHAND){\r\n                if(anchor.getItem() != null){\r\n                    Weapon weapon = (Weapon) anchor.getItem();\r\n                    damage += weapon.getDamage();\r\n                }\r\n            }\r\n        }\r\n        return (int) Math.floor((damage-10)/2);\r\n    }\r\n\r\n    /**\r\n     * Gives the total protection stat of the hero.\r\n     * @return The total protection stat that is the intrinsic protection with the currentpotection that the\r\n     *         equiped armor gives.\r\n     *         |return getProtection() + armor.getCurrentArmor()\r\n     */\r\n\r\n    @Override\r\n    protected int getTotalProtection(){\r\n        int protection = getProtection();\r\n        for(Anchor anchor : getAnchors()){\r\n            if(anchor.getAnchorType() == AnchorType.LICHAAM){\r\n                if(anchor.getItem() != null){\r\n                    Armor armor = (Armor) anchor.getItem();\r\n                    protection += armor.getCurrentArmor();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return protection;\r\n    }\r\n    @Override\r\n    protected void LootAndHeal(ArrayList<Equipable> items) {\r\n        for(Anchor anchor: getAnchors()){\r\n            for(Equipable item: items){\r\n                if(item.isValidAnchor(anchor)){\r\n                    if(item.getValue() > anchor.getItem().getValue()){\r\n                        if(anchor.getItem().getWeight()-item.getWeight() <= getCapacity()) {\r\n                            try {\r\n                                drop(anchor.getItem());\r\n                            } catch (OtherPlayersItemException e) {\r\n                                throw new RuntimeException(e);\r\n                            }\r\n                            item.equip(anchor);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Random random = new Random();\r\n        double percentage = random.nextDouble();\r\n        int hp = (int) Math.round((getMaxHitPoints() - getHitPoints()) * percentage + getHitPoints());\r\n        setHitPoints(findClosestPrime(hp,getMaxHitPoints()));\r\n    }\r\n\r\n    /**\r\n     * Lets a hero pick up an equipable item of the ground and equip it in one of its anchor points.\r\n     *\r\n     * @param item\r\n     *        the item that will be picked up.\r\n     * @param anchortype\r\n     *        the name of the anchor where the item has to be equipped to.\r\n     *\r\n     * @effect The item gets picked up and equipped it in the anchorslot with the given type.\r\n     *         super.pickUp(item, anchortype)\r\n     *\r\n     * @throws ItemAlreadyobtainedException\r\n     *         The item already has a holder which means it can't be picked up.\r\n     *         |item.getHolder == null\r\n     * @throws IllegalArgumentException\r\n     *         The item is not effective\r\n     *         |item == null\r\n     * @throws AnchorslotOquipiedException\r\n     *         The creature is already holding an item in the anchor with the given anchortype\r\n     *         |anchor.getItem() != null\r\n     * @throws CarryLimitReachedException\r\n     *         The given item is can't be picked up because the creature cannot carry it anymore\r\n     *         because the maximum carry capacity has been reached. In case the user wants to pick up a backpack,\r\n     *         the contents of this backpack are also considered for the calculation of the weight of the item.\r\n     *         If the user tries to pick up more than 2 armors this error is also thrown.\r\n     *         |item.getTotalWeight > getCapacity || (item instanceof Armor && this.getNbOfArmors = 2)\r\n     * @throws BeltAnchorException\r\n     *         The user wants to equip an item that isn't a purse to the belt anchorslot of the hero.\r\n     *         |anchortype.getName() == \"Riem\" && item not instanceof Purse\r\n     */\r\n    @Override @Raw\r\n    public void pickUp(Equipable item, AnchorType anchortype) throws ItemAlreadyobtainedException,IllegalArgumentException,\r\n            AnchorslotOquipiedException, CarryLimitReachedException, BeltAnchorException{\r\n        if(!canPickUpArmor() && item instanceof Armor)\r\n            throw new CarryLimitReachedException(item);\r\n        super.pickUp(item, anchortype);\r\n    }\r\n\r\n    /**\r\n     * Stores an item, equipped in an anchorslot, away in a specified backpack.\r\n     *\r\n     * @param item\r\n     *        The item to be stored away.\r\n     * @param backpack\r\n     *        The backpack to store the item away in.\r\n     *\r\n     * @effect The specified item is added to the contents of the specified backpack\r\n     *         |backpack.addEquipable(item);\r\n     * @effect The anchoritem of the anchor that the item was previously being stored in, is set to null\r\n     *         |itemanchor.setItem(null);\r\n     *\r\n     * @throws IllegalArgumentException\r\n     *         The backpack is not effective or the specified backpack is not a backpack of this hero\r\n     *         |(backpack.getHolder() != this || backpack == null)\r\n     * @throws IllegalArgumentException\r\n     *         The item is not effective or the specified item is not a item of this hero\r\n     *         |(item.getHolder() != this || item == null)\r\n     * @throws IllegalArgumentException\r\n     *         The backpack or the item is currently not being stored in an anchor, meaning that they are being stored in a backpack.\r\n     *         Because backpacks in backpacks may not contain items and items already in a backpack cannot be stored away, an exception\r\n     *         is thrown.\r\n     */\r\n    @Raw\r\n    public void store(Equipable item, Backpack backpack) throws IllegalArgumentException{\r\n\r\n        if(backpack.getHolder() != this || backpack == null)\r\n            throw new IllegalArgumentException();\r\n\r\n        if(item.getHolder() != this || item == null)\r\n            throw new IllegalArgumentException();\r\n\r\n        Anchor backpackanchor = null;\r\n        Anchor itemanchor = null;\r\n        //als rugzak niet in een anchor, throw error\r\n        for(int i= 0; i < getAnchors().size(); i++){\r\n            if(getAnchorItemAt(i) == backpack){\r\n                backpackanchor = getAnchorAt(i);\r\n            }\r\n            else if(getAnchorItemAt(i) == item)\r\n                itemanchor = getAnchorAt(i);\r\n        }\r\n        if(backpackanchor == null || itemanchor == null){\r\n            throw new IllegalArgumentException();\r\n        }\r\n\r\n        try {\r\n            backpack.addEquipable(item);\r\n        } catch (BackPackNotEmptyException e) {\r\n            throw new RuntimeException(e);\r\n        } catch (CarryLimitReachedException e) {\r\n            throw new RuntimeException(e);\r\n        } catch (OtherPlayersItemException e) {\r\n            throw new RuntimeException(e);\r\n        } catch (ItemAlreadyobtainedException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        itemanchor.setItem(null);\r\n    }\r\n\r\n    /**\r\n     * Picks an item of the ground and immediately stores it away in a specified backpack.\r\n     *\r\n     * @param item\r\n     *        the item to be picked up.\r\n     * @param backpack\r\n     *        the backpack to store the item away in.\r\n     * @effect The item in the left or right hand that isn't the specified backpack is saved and temporarily set to null, the\r\n     *         specified item gets picked up.\r\n     *         |Equipable currholding = getAnchorItemAt(i);\r\n     *         |getAnchorAt(i).setItem(null);\r\n     *         |pickUp(item, getAnchorAt(i).getAnchorType());\r\n     * @effect The newly picked up item gets stored away in the specified backpack. Finally, the saved item is equiped again in the original anchorslot.\r\n     *         |store(item,backpack)\r\n     *\r\n     * @throws IllegalArgumentException\r\n     *         the item or the backpack is not effective\r\n     *         |(item == null || backpack == null)\r\n     * @throws ItemAlreadyobtainedException\r\n     *         This hero already has this item\r\n     *         |item.getholder == this\r\n     * @throws OtherPlayersItemException\r\n     *        the backpack or the item belongs the another player.\r\n     *        |backpack.getHolder() != this || item.getHolder() != null\r\n     * @throws CarryLimitReachedException\r\n     *         The item cannot be picked up because the specified backpack doesn't have enough capacity left\r\n     *         |backpack.getCapacity() < backpack.getTotalWeight() + item.getWeight()\r\n     * @throws IllegalArgumentException\r\n     *         The item we want to pick up is a backpack which isn't empty.\r\n     *         |((Backpack) item).getTotalWeight() != item.getWeight()\r\n     * @throws IllegalArgumentException\r\n     *         The specified backpack is already being stored within another backpack.\r\n     *         |backpack.getParentbackpack() != null\r\n     */\r\n    @Raw\r\n    public void pickUpAndStore(Equipable item, Backpack backpack) throws OtherPlayersItemException, CarryLimitReachedException,\r\n            ItemAlreadyobtainedException, IllegalArgumentException{\r\n\r\n        //checkers invoeren i suppose om error te voorkomen in try catch blok\r\n        // is item of backapck niet al van iemand anders\r\n        if(item == null || backpack == null)\r\n            throw new IllegalArgumentException();\r\n        if(item.getHolder() == this)\r\n            throw new ItemAlreadyobtainedException();\r\n        if(backpack.getHolder() != this || item.getHolder() != null)\r\n            throw new OtherPlayersItemException();\r\n        if(backpack.getCapacity() < backpack.getTotalWeight() + item.getWeight())\r\n            throw new CarryLimitReachedException(item);\r\n        if(item instanceof Backpack)\r\n            if(((Backpack) item).getTotalWeight() != item.getWeight())\r\n                throw new IllegalArgumentException();\r\n        if(backpack.getParentbackpack() != null)\r\n            throw new IllegalArgumentException();\r\n\r\n        /**\r\n         * het item in onze hand dat niet de rugzak is wordt even op de grond gelegd om een item op te pakken.\r\n         */\r\n        int i = 0;\r\n        Equipable currholding = getAnchorItemAt(0);\r\n        if(currholding == backpack){\r\n            i++;\r\n            currholding = getAnchorItemAt(i);\r\n        }\r\n        getAnchorAt(i).setItem(null);\r\n\r\n        //We proberen het item op te pakken\r\n        try {\r\n            pickUp(item, getAnchorAt(i).getAnchorType());\r\n            store(item, backpack);\r\n        }  catch (AnchorslotOquipiedException e) {\r\n            throw new RuntimeException(e);\r\n        }finally {\r\n            //Het wapen wordt weer vastgenomen\r\n            getAnchorAt(i).setItem(currholding);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Takes an item out of the backpack that the item is stored in and moves it to the specified Anchor if that anchor is empty.\r\n     *\r\n     * @param item\r\n     *        The item to be taken out of its backpack\r\n     * @param location\r\n     *        The anchorpoint of the hero to move the item to\r\n     *\r\n     * @effect The item is removed from the content of the backpack\r\n     *         |item.getParentbackpack().removeEquipable(item);\r\n     * @effet The item of the specified anchor is set to the given item\r\n     *        |anchor.setItem(item)\r\n     *\r\n     * @throws IllegalArgumentException\r\n     *         the given item is currently not being stored in a backpack.\r\n     *         |item.getParentbackpack() = null\r\n     * @throws OtherPlayersItemException\r\n     *         the item is being stored in a backpack that isn't a backpack of this hero\r\n     *         |item.getParent.getHolder() != this\r\n     * @throws BeltAnchorException\r\n     *         The user wants to equip an item that isn't a purse to the belt anchorslot of the hero.\r\n     *         |anchortype.getName() == \"Riem\" && item not instanceof Purse\r\n     * @throws AnchorslotOquipiedException\r\n     *         The anchor location does not exist or already has an item equiped in this slot\r\n     *         |anchor.getItem() != null || getAnchors.contains(anchortype) == false\r\n     */\r\n    @Raw\r\n    public void Equip(Equipable item, AnchorType location) throws IllegalArgumentException, OtherPlayersItemException, AnchorslotOquipiedException, BeltAnchorException{\r\n\r\n        Backpack parent = item.getParentbackpack();\r\n        if(parent == null)\r\n            throw new IllegalArgumentException();\r\n        if(parent.getHolder() != this)\r\n            throw new OtherPlayersItemException();\r\n        if (location.getName() == \"Riem\" && !(item instanceof Purse))\r\n            throw new BeltAnchorException();\r\n\r\n        Anchor anchor = null;\r\n\r\n        for (int i = 0; i < getAnchors().size(); i++) {\r\n            Anchor curranchor = getAnchorAt(i);\r\n            if (curranchor.getAnchorType() == location) {\r\n                if(curranchor.getItem() == null){\r\n                    anchor = curranchor;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(anchor == null)\r\n            throw new AnchorslotOquipiedException();\r\n\r\n        parent.removeEquipable(item);\r\n        anchor.setItem(item);\r\n    }\r\n\r\n    /**\r\n     * Moves an item from the first specified anchor to the second anchor if the second Anchor is empty.\r\n     *\r\n     * @param start\r\n     *        the anchor to move the item from\r\n     * @param end\r\n     *        the anchor to move the item to\r\n     *\r\n     * @effect the item in the start anchor is set to null\r\n     *         |start.setItem(null)\r\n     * @effect the item in the end anchor is set to the item in the start anchor\r\n     *         |end.setItem(start.getItem())\r\n     *\r\n     * @throws AnchorslotOquipiedException\r\n     *         The endAnchor already has an item equiped to it\r\n     *         |end.getItem() != null\r\n     * @throws BeltAnchorException\r\n     *         The user wants to equip an item that isn't a purse to the belt anchorslot of the creature.\r\n     *         |anchortype.getName() == \"Riem\" && item not instanceof Purse\r\n     */\r\n    public void moveAnchorItemtoAnchor(AnchorType start, AnchorType end) throws AnchorslotOquipiedException, BeltAnchorException{\r\n\r\n        Anchor startanchor = null;\r\n        Anchor endanchor = null;\r\n\r\n        for (int i = 0; i < getAnchors().size(); i++) {\r\n            Anchor curranchor = getAnchorAt(i);\r\n            if (curranchor.getAnchorType() == start)\r\n                startanchor = curranchor;\r\n            if(curranchor.getAnchorType() == end)\r\n                endanchor = curranchor;\r\n        }\r\n        if(startanchor != endanchor){\r\n            Equipable startitem = startanchor.getItem();\r\n            if(endanchor.getItem() != null)\r\n                throw new AnchorslotOquipiedException();\r\n            if (end.getName() == \"Riem\" && !(startitem instanceof Purse))\r\n                throw new BeltAnchorException();\r\n\r\n            startanchor.setItem(null);\r\n            endanchor.setItem(startitem);\r\n             }\r\n    }\r\n\r\n    /**\r\n     * Returns the total number of armors that a hero is currently carrying in his anchors and backpacks.\r\n     */\r\n    @Model\r\n    private int getNbOfArmors(){\r\n       int total = 0;\r\n        for (int i = 0; i < getAnchors().size(); i++){\r\n            Equipable currItem = getAnchorItemAt(i);\r\n            if(currItem instanceof Armor)\r\n                total++;\r\n            else if (currItem instanceof Backpack) {\r\n                total= total +((Backpack) currItem).getNbOfArmors();\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n\r\n    /**\r\n     * @return True if the total number of armors that this hero is currently carrying is smaller than 2. False otherwise.\r\n     */\r\n    @Raw\r\n    public boolean canPickUpArmor(){\r\n        return (getNbOfArmors() < 2);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Swaps the postion of the two armors that a hero is currently carrying with him. Deze shit fiksen zodat pickup en drop in 1 stap worden afgehandelt. FUN!\r\n     */\r\n    public void swapArmors(Armor armor) throws CantFindArmortoSwapException, CarryLimitReachedException, OtherPlayersItemException {\r\n        if(getNbOfArmors() != 2)\r\n            throw new CantFindArmortoSwapException();\r\n        Equipable bodyitem = getAnchorItemAt(3);\r\n        if(!(bodyitem instanceof Armor))\r\n            throw new CantFindArmortoSwapException();\r\n\r\n        Backpack parent = armor.getParentbackpack();\r\n        if(armor.getHolder() == this) {\r\n            if (parent != null) { //armor zit in een rugzak\r\n                int weight = parent.getTotalWeight() - armor.getWeight() + bodyitem.getWeight();\r\n                if (weight > parent.getCapacity())\r\n                    throw new CarryLimitReachedException(bodyitem);\r\n\r\n                parent.removeEquipable(armor);\r\n                store(bodyitem, parent);\r\n\r\n                try {\r\n                    pickUp(armor, AnchorType.LICHAAM);\r\n                } catch (ItemAlreadyobtainedException e) {\r\n                    throw new RuntimeException(e);\r\n                } catch (AnchorslotOquipiedException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            }\r\n            //armor zit in een Anchor\r\n            else {\r\n                Anchor curranchor = null;\r\n                for (int i = 0; i < getAnchors().size(); i++) {\r\n                    curranchor = getAnchorAt(i);\r\n                    if (curranchor.getItem() == armor)\r\n                        break;\r\n                }\r\n                drop(bodyitem);\r\n                try {\r\n                    moveAnchorItemtoAnchor(curranchor.getAnchorType(), AnchorType.LICHAAM);\r\n                } catch (AnchorslotOquipiedException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n                try {\r\n                    pickUp(bodyitem, curranchor.getAnchorType());\r\n                } catch (ItemAlreadyobtainedException e) {\r\n                    throw new RuntimeException(e);\r\n                } catch (AnchorslotOquipiedException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            }\r\n        } else if (armor.getHolder() == null) {\r\n            if(getCapacity() - bodyitem.getWeight() + armor.getWeight() > getMaxCapacity())\r\n                throw new CarryLimitReachedException(armor);\r\n            drop(bodyitem);\r\n            try {\r\n                pickUp(armor, AnchorType.LICHAAM);\r\n            } catch (ItemAlreadyobtainedException e) {\r\n                throw new RuntimeException(e);\r\n            } catch (AnchorslotOquipiedException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n\r\n\r\n        } else\r\n            throw new IllegalArgumentException();\r\n    }\r\n    /**\r\n     * Gives the closest positive prime number to a number that isn't bigger than a given maximum.\r\n     * @param number\r\n     *        The number that you want the closest prime of.\r\n     * @param max\r\n     *        The maximum, the returned prime number can't be bigger than this value.\r\n     * @return The closest prime number.\r\n     * @pre    The given maximum must be 2 or higher, otherwise there will be no prime number.\r\n     */\r\n    @Model\r\n    private static int findClosestPrime(int number, int max) {\r\n        if (isPrime(number)) {\r\n            return number;  // If the number itself is prime, return it\r\n        }\r\n        int smaller = number - 1;\r\n        int larger = number + 1;\r\n        while (true) {\r\n            if (isPrime(smaller)) {\r\n                return smaller;\r\n            }\r\n            if (isPrime(larger)) {\r\n                return larger;\r\n            }\r\n            if(smaller > 0){\r\n                smaller--;}\r\n            if(larger < max){\r\n                larger++;}\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to determine if a number is prime.\r\n     * @param number\r\n     *        the number\r\n     * @return True if it is prime and false if it is not. Prime means that it is only divisible by 1 and itself.\r\n     *         |if (number <= 1)\r\n     *         |        return false\r\n     *         |\r\n     *         |for (int i = 2; i <= Math.sqrt(number); i++)\r\n     *         |        if (number % i == 0)\r\n     *         |                return false\r\n     */\r\n    @Model\r\n    private static boolean isPrime(int number) {\r\n        if (number <= 1) {\r\n            return false;\r\n        }\r\n        for (int i = 2; i <= Math.sqrt(number); i++) {\r\n            if (number % i == 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/RPG/Hero.java b/src/RPG/Hero.java
--- a/src/RPG/Hero.java	(revision 3402c114dd823ef39a44eda0a6c6e780dc811c3b)
+++ b/src/RPG/Hero.java	(date 1683652482301)
@@ -6,7 +6,7 @@
 import be.kuleuven.cs.som.annotate.Model;
 import be.kuleuven.cs.som.annotate.Raw;
 import java.util.Random;
-import java.text.DecimalFormat;
+
 
 /**
  *
